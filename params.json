{"name":"ply","tagline":"Function.prototype.apply wrappers","body":"# Synopsis\r\n\r\n**ply** is a collection of wrappers around `Function.prototype.apply`.\r\n\r\n[![stability 5 - locked](http://b.repl.ca/v1/stability-5_--_locked-blue.png)\r\n](http://nodejs.org/api/documentation.html#documentation_stability_index) [![license - Unlicense](http://b.repl.ca/v1/license-Unlicense-lightgrey.png)](http://unlicense.org/) [![Flattr this](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=pluma&url=https://github.com/pluma/ply)\r\n\r\n[![browser support](https://ci.testling.com/pluma/ply.png)](https://ci.testling.com/pluma/ply)\r\n\r\n[![Build Status](https://travis-ci.org/pluma/ply.png?branch=master)](https://travis-ci.org/pluma/ply) [![Coverage Status](https://coveralls.io/repos/pluma/ply/badge.png?branch=master)](https://coveralls.io/r/pluma/ply?branch=master) [![Dependencies](https://david-dm.org/pluma/ply.png?theme=shields.io)](https://david-dm.org/pluma/ply)\r\n\r\n# Why?\r\n\r\nIt's trivial to implement, but in order to keep code DRY (and avoid silly mistakes) it makes sense to define this function only once per project. This library is the logical consequence of that.\r\n\r\n# Install\r\n\r\n## Node.js\r\n\r\n### With NPM\r\n\r\n```sh\r\nnpm install ply\r\n```\r\n\r\n### From source\r\n\r\n```sh\r\ngit clone https://github.com/pluma/ply.git\r\ncd ply\r\nnpm install\r\nmake\r\n```\r\n\r\n## Browser\r\n\r\n### With component\r\n\r\n```sh\r\ncomponent install pluma/ply\r\n```\r\n\r\n[Learn more about component](https://github.com/component/component).\r\n\r\n### With bower\r\n\r\n```sh\r\nbower install ply\r\n```\r\n\r\n[Learn more about bower](https://github.com/twitter/bower).\r\n\r\n### With a CommonJS module loader\r\n\r\nDownload the [latest minified CommonJS release](https://raw.github.com/pluma/ply/master/dist/ply.min.js) and add it to your project.\r\n\r\n[Learn more about CommonJS modules](http://wiki.commonjs.org/wiki/Modules/1.1).\r\n\r\n### With an AMD module loader\r\n\r\nDownload the [latest minified AMD release](https://raw.github.com/pluma/ply/master/dist/ply.amd.min.js) and add it to your project.\r\n\r\n[Learn more about AMD modules](http://requirejs.org/docs/whyamd.html).\r\n\r\n### As a standalone library\r\n\r\nDownload the [latest minified standalone release](https://raw.github.com/pluma/ply/master/dist/ply.globals.min.js) and add it to your project.\r\n\r\n```html\r\n<script src=\"/your/js/path/ply.globals.min.js\"></script>\r\n```\r\n\r\nThis makes the `ply` module available in the global namespace.\r\n\r\n# Basic usage example\r\n\r\n```javascript\r\nvar mcall = require('ply').mcall;\r\n\r\nmcall(console, 'log', 'Hello', 'World'); // 'Hello' 'World'\r\n```\r\n\r\n# API\r\n\r\n## apply(fn:Function, self:Object, args:Array)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nfn.apply(self, args);\r\n```\r\n\r\n## call(fn:Function, self:Object, args...)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nfn.call(self, args...);\r\n```\r\n\r\n## fapply(fn:Function, args:Array)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nfn.apply(this, args);\r\n```\r\n\r\n## fcall(fn:Function, args...)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nfn.call(this, args...);\r\n```\r\n\r\n## mapply(obj:Object, name:String, args:Array)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nobj[name].apply(obj, args);\r\n```\r\n\r\n## mcall(obj:Object, name:String, args...)\r\n\r\nEquivalent to the following:\r\n\r\n```javascript\r\nobj[name].call(obj, args...);\r\n```\r\n\r\n# Unlicense\r\n\r\nThis is free and unencumbered public domain software. For more information, see http://unlicense.org/ or the accompanying [UNLICENSE](https://github.com/pluma/ply/blob/master/UNLICENSE) file.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}